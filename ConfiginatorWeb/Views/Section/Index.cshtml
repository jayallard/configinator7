@model ConfiginatorWeb.Interactors.Queries.Section.IndexResponse

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
<script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>

<h2>Configinator Overview</h2>
<table class="table table-bordered">
    <thead>
    <tr class="table-secondary">
        <th>Namespace</th>
        <th>Sections</th>
        <th>Schemas</th>
        <th>Variable Sets</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var ns in Model.Namespaces.OrderBy(n => n.NamespaceName))
    {
        <tr>
            <td>@ns.NamespaceName</td>
            <td>
                <ul>
                    @foreach (var s in ns.Sections)
                    {
                        <li>
                            @Html.SectionLink(null, s.SectionName, s.SectionId)
                            <ul>
                                @foreach (var e in s.Environments.OrderBy(e => e.EnvironmentName))
                                {
                                    <li>@e.EnvironmentName @Html.IsDeployedBadge(e.IsDeployed) @Html.IsOutOfDateBadge(e.IsOutOfDate)</li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
            </td>
            <td>
                @foreach (var s in ns.Schemas)
                {
                    <li>
                        @Html.SchemaLink(@s.SchemaName.FullName)
                        @if (s.IsForSection)
                        {
                            <i>@s.SectionName</i>
                        }
                        <ul>
                            @foreach (var et in s.EnvironmentTypes)
                            {
                                <li>@et</li>
                            }
                        </ul>
                    </li>
                }
            </td>
            <td>
                @foreach (var byEnvironmentType in ns.VariableSets.GroupBy(vs => vs.EnvironmentType))
                {
                    <p>@byEnvironmentType.Key</p>
                    <ul>
                        @foreach (var vs in byEnvironmentType)
                        {
                            <li>@Html.VariableSetLink(vs.VariableSetName)</li>
                        }
                    </ul>
                }
            </td>
        </tr>
    }
    </tbody>
</table>
<ul>
    <li>
        <a asp-action="Create">Add Configuration Section</a>
    </li>
    <li>
        <a asp-action="AddSchema" asp-controller="Schema">Add Schema</a>
    </li>
</ul>


@* <h2>Configuration Sections</h2> *@
@* <table class="table table-bordered"> *@
@*     <thead> *@
@*     <tr> *@
@*         <th>Section Name</th> *@
@*         <th>Environment Types</th> *@
@*     </tr> *@
@*     </thead> *@
@*     <tbody> *@
@*     @foreach (var i in Model.Sections) *@
@*     { *@
@*         <tr> *@
@*             <td> *@
@*                 @Html.SectionLink(i.Namespace, i.Name, i.SectionId) *@
@*                 $1$ @if (i.DeployedIsOutOfDate) #1# *@
@*                 $1$ { #1# *@
@*                 $1$     <span class="badge rounded-pill bg-warning">Out of Date</span> #1# *@
@*                 $1$ } #1# *@
@*             </td> *@
@*             <td>@string.Join(", ", i.EnvironmentTypes.OrderBy(et => et).ToArray())</td> *@
@*         </tr> *@
@*     } *@
@*     </tbody> *@
@* </table> *@

@* <a asp-action="Create">Add Configuration Section</a> *@
@* <br/><br/> *@
@* <h2>Schemas</h2> *@
@* <table class="table table-bordered"> *@
@*     <thead> *@
@*     <tr> *@
@*         <th>Namespace</th> *@
@*         <th>Name</th> *@
@*         <th>Environment Types</th> *@
@*         <th>Description</th> *@
@*     </tr> *@
@*     </thead> *@
@*     <tbody> *@
@*     @foreach (var t in Model.Schemas.OrderBy(kv => kv.SchemaName.FullName)) *@
@*     { *@
@*         <tr> *@
@*             <td>@t.Namespace</td> *@
@*             <td>@Html.SchemaLink(t.SchemaName.FullName)</td> *@
@*             <td>@string.Join(", ", t.EnvironmentTypes.OrderBy(et => et).ToArray())</td> *@
@*             <td>@t.Description</td> *@
@*         </tr> *@
@*     } *@
@*     </tbody> *@
@* </table> *@
@* <p> *@
@*     <a asp-action="AddSchema" asp-controller="Schema">Add Schema</a> *@
@* </p> *@
@* <br/> *@
@* <h2>Variable Sets</h2> *@
@* <br/> *@
@* TODO: create toggle for text vs diagram *@
@* <table class="table"> *@
@*     @foreach (var t in Model.VariableSets.OrderBy(kv => kv.VariableSetName)) *@
@*     { *@
@*         <tr> *@
@*             <td> *@
@*                 <a asp-controller="VariableSet" asp-action="Index" asp-route-variableSetName="@t.VariableSetName">@t.VariableSetName</a> *@
@*             </td> *@
@*         </tr> *@
@*     } *@
@* </table> *@
<br/><br/>
<h1>Variable Sets</h1>
@foreach (var environmentType in Model
    .VariableSets
    .Where(t => t.Mermaid != null)
    .GroupBy(kv => kv.EnvironmentType))
{
    <h3>@environmentType.Key</h3>
    <hr/>
    @foreach (var vs in environmentType)
    {
        <div class="mermaid">
            @vs.Mermaid
        </div>
        <br/>
        <br/>
    }
}

<script>mermaid.initialize({ startOnLoad: true })</script>