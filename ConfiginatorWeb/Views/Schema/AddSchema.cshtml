@using ConfiginatorWeb.Interactors.Queries.Section
@model ConfiginatorWeb.Controllers.AddSchemaViewModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
    var imports = ViewData["imports"] as List<SchemaListItemDto>;
}

<h1>Create Schema</h1>
@if (Model.IsForSection)
{
    <h2>For Section: @Model.SectionName</h2>
}

<form method="post">
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(m => m.SchemaName)
        @Html.TextBoxFor(m => m.SchemaName, new {@class = "form-control"})
        @Html.ValidationMessageFor(x => x.SchemaName, "", new {@class = "text-danger"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SelectedNamespace)<br/>
        @Html.DropDownListFor(m => m.SelectedNamespace, (List<SelectListItem>)ViewData["ns"])
        @Html.ValidationMessageFor(x => x.SelectedNamespace, "", new {@class = "text-danger"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Schema)<br/>
        @Html.TextAreaFor(m => m.Schema, new {@class = "form-control", style = "height:300px"})
        @Html.ValidationMessageFor(x => x.Schema, "", new {@class = "text-danger"})
    </div>
    @Html.HiddenFor(m => m.SectionId)
    @Html.HiddenFor(m => m.SectionName)
    @Html.ValidationSummary(false)
    <input type="submit" class="btn btn-primary"/>
</form>

@if (imports != null && imports.Any())
{
    <h2>Import</h2>
    <p>The Import will make a copy of the selected schema. This is useful for creating a new version of an existing schema.</p>
    <ul>
        @foreach (var import in imports)
        {
            <li>@import.SchemaName.FullName</li>
        }
    </ul>
}