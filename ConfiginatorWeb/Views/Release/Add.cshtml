@model ConfiginatorWeb.Models.Release.EditReleaseView

@{
    ViewBag.Title = "Create Configuration Release";
    Layout = "_Layout";
}

<script type="text/javascript" src="~/lib/jquery/dist/jquery.min.js">
</script>

<script type="text/javascript">
function selectedSchemaName() {
    return $('#ddSchema option:selected').text();
}

function selectedSchemaDomId() {
    return $('#ddSchema').val();
}

$(document).ready(function() {
    $('#ddSchema').change(function(e) {
        $('[id^=schema-]').hide();
        
        //const selectedSchemaId = '#' + $(this).val();
        $('#' + selectedSchemaDomId()).show(); 
    });
    
    $('#save').click(function (e){
        const requestDto = {
                                     SectionName: '@Model.SectionName',
                                     EnvironmentName: '@Model.EnvironmentName',
                                     SchemaName: selectedSchemaName(),
                                     Value: $('#value').val(),
                                     VariableSetName: $('#variableSet').val()
                                 };
        //alert(JSON.stringify(requestDto));
        $.post('/Release/Create', requestDto)
        .done(function(data) {
            if (data.success) {
                document.location.replace("/Section/Display?name=@Model.SectionName")
                return;
            }
            
            alert(JSON.stringify(data));
        });
    });
});

</script>

<h1>Create Release</h1>
<h3>Configuration Section</h3>
<p>@Model.SectionName</p>
<h3>Environment: @Model.EnvironmentName</h3>

<form method="post">
    <div class="container">
        <div class="row">
            <div class="col-2">
                Schema
            </div>
            <div class="col-1">
                <select id="ddSchema">
                    <option></option>
                    @foreach (var s in Model.Schemas)
                    {
                        @if (string.Equals(Model.DefaultSchemaName, s.SchemaName.FullName, StringComparison.OrdinalIgnoreCase))
                        {
                            <option selected="selected" value="@s.SchemaName.FullName">@s.SchemaName.FullName</option>
                        }
                        else
                        {
                            <option value="@s.SchemaName.FullName">@s.SchemaName.FullName</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-2">
                Variable Set
            </div>
            <div class="col-1">
                <select id="variableSet">
                    <!-- I couldn't get Html.DropDownListFor to work for this -->
                    <option></option>
                    @foreach (var ts in Model.VariableSetNames)
                    {
                        @if (string.Equals(Model.DefaultVariableSetName, ts, StringComparison.OrdinalIgnoreCase))
                        {
                            <option selected="selected" value="@ts">@ts</option>
                        }
                        else
                        {
                            <option>@ts</option>
                        }
                    }
                </select>
            </div>
        </div>
    </div>
    <br/>
    <table style="width: 100%;">
        <thead>
        <tr>
            <th>Value</th>
        </tr>
        </thead>
        <tr>
            <td style="vertical-align: top; width: 50%;">
                <textarea style="width:100%; height: 200px" id="value">@Model.DefaultValue</textarea>
            </td>
        </tr>
    </table>
    @if (Model.DefaultValue != null)
    {
        <div>The values have been copied from the latest release.</div>
    }
    <button type="button" class="btn btn-primary" id="save">Create Release</button>
    <button type="reset" class="btn btn-secondary">Reset</button>
</form>
<h2>Preview</h2>
<p>Coming Soon!</p>

<h2>Variables</h2>
<p>Coming Soon!</p>

<h2>Schema</h2>
<div id="@Model.Schemas[0].SchemaName">
    <pre>@Model.Schemas[0].Schema</pre>
</div>

@foreach (var schema in Model.Schemas.Skip(1))
{
    <div id="@schema.SchemaName" style="display: none">
        <pre>@schema.Schema.</pre>
    </div>
}