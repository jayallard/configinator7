@model ConfiginatorWeb.Models.Release.EditReleaseView

@{
    ViewBag.Title = "Create Configuration Release";
    Layout = "_Layout";
}

<script type="text/javascript" src="~/lib/jquery/dist/jquery.min.js">
</script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script type="text/javascript">
function selectedSchemaName() {
    return $('#ddSchema option:selected').text();
}

function selectedVariableSetName() {
    return $('#variableSet option:selected').text();
}

$(document).ready(function() {
    $('#btnGenerateSample').click(function (e) {
        $.get('@Url.ActionLink("GetSchemaSample", "Release")?schemaName=' + selectedSchemaName())
        .done(function(data) {
            $('#value').val(data);
        });
    });
    
    $('#viewVariableSet').click(function () {
        if (selectedVariableSetName() === '') {
            return;
        }
        window.open('@Url.ActionLink("Index", "VariableSet")?variableSetName=' + selectedVariableSetName());
    });
    
        $('#viewSchema').click(function () {
            if (selectedSchemaName() === '') {
                return;
            }
            window.open('@Url.ActionLink("SchemaView", "Schema")?schemaName=' + selectedSchemaName());
        });
        
    $('#ddSchema').change(function(e) {
        $('[id^=schema-]').hide();
        
        //const selectedSchemaId = '#' + $(this).val();
        $('#' + selectedSchemaDomId()).show(); 
    });
    
    $('#save').click(function (e){
        const requestDto = {
                                     SectionName: '@Model.SectionName',
                                     EnvironmentName: '@Model.EnvironmentName',
                                     SchemaName: selectedSchemaName(),
                                     Value: $('#value').val(),
                                     VariableSetName: $('#variableSet').val()
                                 };
        //alert(JSON.stringify(requestDto));
        $.post('/Release/Create', requestDto)
        .done(function(data) {
            if (data.success) {
                document.location.replace('@Url.ActionLink("Display", "Section", new { Model.SectionId })')
                return;
            }
            
            alert(JSON.stringify(data));
        });
    });
});

</script>

<h1>Create Release</h1>
<h3>Configuration Section</h3>
<p>Namespace: @Model.EnvironmentName<br/>
    Section: @Model.SectionName<br/>
    Environment: @Model.EnvironmentName
</p>

<form method="post">
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row">
            <div class="col-2">
                Schema
            </div>
            <div class="col-3">
                <select id="ddSchema">
                    <option></option>
                    @foreach (var s in Model.Schemas)
                    {
                        @if (string.Equals(Model.DefaultSchemaName, s.SchemaName.FullName, StringComparison.OrdinalIgnoreCase))
                        {
                            <option selected="selected" value="@s.SchemaName.FullName">@s.SchemaName.FullName</option>
                        }
                        else
                        {
                            <option value="@s.SchemaName.FullName">@s.SchemaName.FullName</option>
                        }
                    }
                </select>&nbsp;<a class="fa fa-external-link" id="viewSchema"></a>
            </div>
        </div>
        <div class="row">
            <div class="col-2">
                Variable Set
            </div>
            <div class="col-3">
                <select id="variableSet">
                    <!-- I couldn't get Html.DropDownListFor to work for this -->
                    <option></option>
                    @foreach (var ts in Model.VariableSetNames)
                    {
                        @if (string.Equals(Model.DefaultVariableSetName, ts, StringComparison.OrdinalIgnoreCase))
                        {
                            <option selected="selected" value="@ts">@ts</option>
                        }
                        else
                        {
                            <option>@ts</option>
                        }
                    }
                </select>&nbsp;<a class="fa fa-external-link" id="viewVariableSet"></a>
            </div>
        </div>
    </div>
    <br/>
    <table style="width: 100%;">
        <thead>
        <tr>
            <th>Value</th>
        </tr>
        </thead>
        <tr>
            <td style="vertical-align: top; width: 50%;">
                <textarea style="width:100%; height: 200px" id="value">@Model.DefaultValue</textarea>
            </td>
        </tr>
    </table>
    <p><button type="button" class="btn btn-link" id="btnGenerateSample">Generate Sample</button></p>

    @if (Model.DefaultValue != null)
    {
        <div>The values have been copied from the latest release.</div>
    }
    <button type="button" class="btn btn-primary" id="save">Create Release</button>
    <button type="reset" class="btn btn-secondary">Reset</button>
</form>
<br/>
<i><b>TODO</b> - the schema and variables can be displayed on page; just not done yet.</i>
<br/>
