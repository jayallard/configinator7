@model ConfiginatorWeb.Models.Release.EditReleaseView

@{
    ViewBag.Title = "Create Configuration Release";
    Layout = "_Layout";
}

<script type="text/javascript" src="~/lib/jquery/dist/jquery.min.js">
</script>

<script type="text/javascript">
function selectedSchemaVersion() {
    return $('#ddSchema option:selected').text();
}

function selectedSchemaDomId() {
    return $('#ddSchema').val();
}

$(document).ready(function() {
    $('#ddSchema').change(function(e) {
        $('[id^=schema-]').hide();
        
        //const selectedSchemaId = '#' + $(this).val();
        $('#' + selectedSchemaDomId()).show(); 
    });
    
    $('#save').click(function (e){
        const requestDto = {
                                     SectionName: '@Model.SectionName',
                                     EnvironmentName: '@Model.EnvironmentName',
                                     SchemaVersion: selectedSchemaVersion(),
                                     Value: $('#value').val(),
                                     TokenSetName: $('#tokenSet').val()
                                 };
        //alert(JSON.stringify(requestDto));
        $.post('/Release/Create', requestDto)
        .done(function(data) {
            if (data.success) {
                //alert('good');
                document.location.replace("/Configuration/Display?name=@Model.SectionName")
                return;
            }
            
            alert(JSON.stringify(data));
        });
    });
});

</script>

<h1>Create Release</h1>
<h3>Configuration Section: @Model.SectionName</h3>
<h3>Environment: @Model.EnvironmentName</h3>

Schema Version: @Html.DropDownListFor(
                    m => m.Schemas,
                    new SelectList(Model.Schemas, dataValueField: "Id", dataTextField: "Version"), new {id = "ddSchema"})
<br/>
Token Set:
<select id="tokenSet">
    <!-- I couldn't get Html.DropDownListFor to work for this -->
    <option></option>
    @foreach (var ts in Model.TokenSetNames)
    {
        @if (string.Equals(Model.DefaultTokenSetName, ts, StringComparison.OrdinalIgnoreCase))
        {
            <option selected="true" value="@ts">@ts</option>
        }
        else
        {
            <option>@ts</option>
        }
    }
</select>
<table style="width: 100%;">
    <thead>
    <tr>
        <th>Value</th>
    </tr>
    </thead>
    <tr>
        <td style="vertical-align: top; width: 50%;">
            <textarea style="width:100%; height: 200px" id="value">@Model.DefaultValue</textarea>
        </td>
    </tr>
</table>
@if (Model.DefaultValue != null)
{
    <div>The value has been copied from the latest release. Edit or replace it with the new value.</div>
}
<input type="button" value="Save" id="save"/>

<h2>Tokens</h2>
<p>Coming Soon!</p>

<h2>Schema</h2>
<div id="@Model.Schemas[0].Id">
    <pre>@Model.Schemas[0].Schema</pre>
</div>

@foreach (var schema in Model.Schemas.Skip(1))
{
    <div id="@schema.Id" style="display: none">
        <pre>@schema.Schema</pre>
    </div>
}