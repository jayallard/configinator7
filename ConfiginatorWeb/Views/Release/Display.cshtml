@using Allard.Json
@model ConfiginatorWeb.Controllers.ReleaseDisplayView

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<p>Section: <a asp-controller="Configuration" asp-action="Display" asp-route-name="@Model.Section.SectionName">@Model.Section.SectionName</a></p>
<p>Environment: @Model.SelectedEnvironment.EnvironmentName</p>
<p>Release Id: @Model.SelectedRelease.ReleaseId</p>

<h2>Resolved Value</h2>
<p>This is the Model Value combined with the tokens. This is the configuration value of the section for this release.</p>
<code><pre>@Model.SelectedRelease.ResolvedValue.PrettyPrint()</pre></code>

<h2>Template Value</h2>
<p>The configuration value template. This is updated with token values, resulting in the Resolved Value.</p>
<code><pre>@Model.SelectedRelease.ModelValue.PrettyPrint()</pre></code>


<h2>Token Set</h2>
@if (Model.SelectedRelease.TokenSet != null)
{
    <p>Name: @Model.SelectedRelease.TokenSet.TokenSetName</p>
    <p>Base: @(Model.SelectedRelease.TokenSet.Base ?? "none")</p>
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Source</th>
            <th></th>
            <th>Value</th>
        </tr>
        </thead>
        @foreach (var t in Model.SelectedRelease.TokenSet.Tokens.Values.OrderBy(v => v.Name))
        {
            <tr>
                @* <td style="@(Model.SelectedRelease.UsedTokens.Contains(t.Name) ? "font-weight: bold; background-color: lightblue;" : "")">@t.Name</td> *@
                <td>@t.Name</td>
                <td>@t.SourceTokenSet</td>
                <td>@t.TokenValueOrigin</td>
                <td>
                    <pre>@t.Token</pre>
                </td>
            </tr>
        }
    </table>
}

<h2>Schema</h2>
<h3>Version @Model.SelectedRelease.Schema.Version.ToFullString()</h3>
@if (Model.SelectedSchema.Root.RefersTo.Any())
{
    <p>
        Uses:
        <ul>
            @foreach (var to in Model.SelectedSchema.Root.RefersTo)
            {
                <li>@to</li>
            }
        </ul>
    </p>
}
<code><pre>@Model.SelectedSchema.Root.SchemaSource.RootElement</pre></code>
@if (Model.SelectedSchema.References.Any())
{
    <h4>Schema References</h4>
    foreach (var r in Model.SelectedSchema.References)
    {
        <p>
            <b>@r.Name</b>
        </p>
        @if (r.RefersTo.Any())
        {
            <p>
                Uses:
                <ul>
                    @foreach (var to in r.RefersTo)
                    {
                        <li>@to</li>
                    }
                </ul>
                }
            </p>
        }
        @if (r.ReferencedBy.Any())
        {
            <p>
                Used By:
                <ul>
                    @foreach (var from in r.ReferencedBy)
                    {
                        <li>@from</li>
                    }
                </ul>
            </p>
        }
        <code><pre>@r.SchemaSource.RootElement</pre></code>
    }
}

@await Component.InvokeAsync("DeploymentHistory", Model.SelectedRelease)