@using Newtonsoft.Json
@using Allard.Json
@model ConfiginatorWeb.Controllers.ReleaseDisplayView

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<p>Section: <a asp-controller="Configuration" asp-action="Display" asp-route-name="@Model.Section.SectionName">@Model.Section.SectionName</a></p>
<p>Environment: @Model.SelectedEnvironment.EnvironmentName</p>
<p>Release Id: @Model.SelectedRelease.ReleaseId</p>

<h2>Token Set</h2>
@if (Model.SelectedRelease.TokenSet != null)
{
    <p>Name: @Model.SelectedRelease.TokenSet.TokenSetName</p>
    <p>Base: @(Model.SelectedRelease.TokenSet.Base ?? "none")</p>
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Source</th>
            <th></th>
            <th>Value</th>
        </tr>
        </thead>
        @foreach (var t in Model.SelectedRelease.TokenSet.Tokens.Values.OrderBy(v => v.Name))
        {
            <tr>
                @* <td style="@(Model.SelectedRelease.UsedTokens.Contains(t.Name) ? "font-weight: bold; background-color: lightblue;" : "")">@t.Name</td> *@
                <td>@t.Name</td>
                <td>@t.SourceTokenSet</td>
                <td>@t.TokenValueOrigin</td>
                <td><pre>@t.Token</pre></td>
            </tr>
        }
    </table>
}

<h2>Schema</h2>
<h3>Version @Model.SelectedRelease.Schema.Version.ToFullString()</h3>
<pre>@Model.SelectedRelease.Schema.Schema.RootElement.ToString()</pre>

<h2>Model Value</h2>
<pre>@Model.SelectedRelease.ModelValue.PrettyPrint()</pre>

<h2>Resolved Value</h2>
<pre>@Model.SelectedRelease.ResolvedValue.PrettyPrint()</pre>

<h2>Deployment History</h2>
@if (!Model.SelectedRelease.Deployments.Any())
{
    <p>None</p>
}
<table class="table">
    <thead>
    <tr>
        <th>Deployment Id</th>
        <th>Deployment Date</th>
        <th>Remove Date</th>
        <th>Remove Reason</th>
    </tr>
    </thead>
    @foreach (var d in Model.SelectedRelease.Deployments.OrderBy(d => d.DeploymentDate))
    {
        <tr>
            <td>@d.DeploymentId</td>
            <td>
                @d.DeploymentDate.ToString("dddd, MMM dd yyyy HH:mm:ss")
                @if (d.IsDeployed)
                {
                    <span class="badge rounded-pill bg-success">Deployed</span>
                }

                @if (Model.SelectedRelease.IsOutOfDate)
                {
                    <span class="badge rounded-pill bg-warning">Out of Date</span>
                }
            </td>
            <td>@d.RemovedDate?.ToString("dddd, MMM dd yyyy HH:mm:ss")</td>
            <td>@d.RemoveReason</td>
        </tr>
    }
</table>
