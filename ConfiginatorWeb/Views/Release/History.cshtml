@using Allard.Configinator.Core.Model
@model ConfiginatorWeb.Controllers.ReleaseHistoryView;

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<h2>Deploy History</h2>
<p>
    Configuration Name: <a asp-action="display" asp-controller="configuration" asp-route-name="@Model.SelectedSection.SectionName">@Model.SelectedSection.SectionName</a><br/>
    Environment: @Model.SelectedEnvironment.EnvironmentName<br/>
</p>
<table class="table">
    <thead>
    <tr>
        <th>Release Id</th>
        <th>Deployment Id</th>
        <th>Schema Version</th>
        <th>Deployment Date</th>
        <th>Remove Date</th>
        <th>Remove Reason</th>
    </tr>
    </thead>
    <!-- only showing deployments. de-deployment was ugly output, and not useful -->
    @foreach (var h in Model.Deployments)
    {
        <tr>
            <td>
                <a asp-action="Display" asp-route-sectionName="@Model.SelectedSection.SectionName" asp-route-environmentName="@Model.SelectedEnvironment.EnvironmentName" asp-route-releaseId="@h.">@h.Release.ReleaseId</a>
            </td>
            <td>@h.Deployment.DeploymentId</td>
            <td>@h.Release.Schema.Version.ToFullString()</td>
            <td>
                @h.Deployment.DeploymentDate.ToString("dddd, MMM dd yyyy HH:mm:ss")
                @if (h.Deployment.IsDeployed)
                {
                    <span class="badge rounded-pill bg-success">Deployed</span>
                }
                @* @if (h.IsOutOrDate) *@
                @* { *@
                @*     <span class="badge rounded-pill bg-warning">Out of Date</span> *@
                @* } *@
            </td>
            <td>@h.Deployment.RemovedDate?.ToString("dddd, MMM dd yyyy HH:mm:ss")</td>
            <td>@h.Deployment.RemoveReason</td>
        </tr>
    }
</table>